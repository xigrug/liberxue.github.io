{"version":3,"sources":["webpack:///webpack/bootstrap 9aede1e92a885cde3262","webpack:///./src/index.js","webpack:///./src/core.js","webpack:///./repos/opts-parser/opts-parser.js","webpack:///./repos/syntaxhighlighter-regex/index.js","webpack:///./repos/syntaxhighlighter-regex/xregexp.js","webpack:///./repos/syntaxhighlighter-match/lib/match.js","webpack:///./repos/syntaxhighlighter-match/lib/apply-regex-list.js","webpack:///./repos/syntaxhighlighter-match/lib/matches.js","webpack:///./repos/syntaxhighlighter-html-renderer/index.js","webpack:///./src/utils.js","webpack:///./src/transformers/index.js","webpack:///./src/transformers/trim.js","webpack:///./src/transformers/blogger_mode.js","webpack:///./src/transformers/strip_brs.js","webpack:///./repos/unindenter/unindenter.js","webpack:///./repos/retabber/retabber.js","webpack:///./src/dom.js","webpack:///./src/config.js","webpack:///./src/defaults.js","webpack:///./src/html_script.js","webpack:///./~/process/browser.js","webpack:///./repos/brush-base/brush-base.js","webpack:///./~/domready/ready.js","webpack:///./src/dasherize.js"],"names":[],"mappings":"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","file":"syntaxhighlighter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9aede1e92a885cde3262\n **/","import domready from 'domready';\nimport SyntaxHighlighter from './core';\nimport * as dasherize from './dasherize';\n\n// configured through the `--compat` parameter.\nif (COMPAT) {\n  require('./compatibility_layer_v3');\n}\n\ndomready(() => SyntaxHighlighter.highlight(dasherize.object(window.syntaxhighlighterConfig || {})));\n\nexport * from './core';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","var\n  optsParser = require('opts-parser'),\n  match = require('syntaxhighlighter-match'),\n  Renderer = require('syntaxhighlighter-html-renderer').default,\n  utils = require('./utils'),\n  transformers = require('./transformers'),\n  dom = require('./dom'),\n  config = require('./config'),\n  defaults = require('./defaults'),\n  HtmlScript = require('./html_script')\n  ;\n\nconst sh = {\n  Match: match.Match,\n  Highlighter: require('brush-base'),\n\n  config: require('./config'),\n  regexLib: require('syntaxhighlighter-regex').commonRegExp,\n\n  /** Internal 'global' variables. */\n  vars : {\n    discoveredBrushes : null,\n    highlighters : {}\n  },\n\n  /** This object is populated by user included external brush files. */\n  brushes : {},\n\n  /**\n   * Finds all elements on the page which should be processes by SyntaxHighlighter.\n   *\n   * @param {Object} globalParams   Optional parameters which override element's\n   *                  parameters. Only used if element is specified.\n   *\n   * @param {Object} element  Optional element to highlight. If none is\n   *              provided, all elements in the current document\n   *              are returned which qualify.\n   *\n   * @return {Array}  Returns list of <code>{ target: DOMElement, params: Object }</code> objects.\n   */\n  findElements: function(globalParams, element)\n  {\n    var elements = element ? [element] : utils.toArray(document.getElementsByTagName(sh.config.tagName)),\n      conf = sh.config,\n      result = []\n      ;\n\n    // support for <SCRIPT TYPE=\"syntaxhighlighter\" /> feature\n    elements = elements.concat(dom.getSyntaxHighlighterScriptTags());\n\n    if (elements.length === 0)\n      return result;\n\n    for (var i = 0, l = elements.length; i < l; i++)\n    {\n      var item = {\n        target: elements[i],\n        // local params take precedence over globals\n        params: optsParser.defaults(optsParser.parse(elements[i].className), globalParams)\n      };\n\n      if (item.params['brush'] == null)\n        continue;\n\n      result.push(item);\n    }\n\n    return result;\n  },\n\n  /**\n   * Shorthand to highlight all elements on the page that are marked as\n   * SyntaxHighlighter source code.\n   *\n   * @param {Object} globalParams   Optional parameters which override element's\n   *                  parameters. Only used if element is specified.\n   *\n   * @param {Object} element  Optional element to highlight. If none is\n   *              provided, all elements in the current document\n   *              are highlighted.\n   */\n  highlight: function(globalParams, element)\n  {\n    var elements = sh.findElements(globalParams, element),\n        propertyName = 'innerHTML',\n        brush = null,\n        renderer,\n        conf = sh.config\n        ;\n\n    if (elements.length === 0)\n      return;\n\n    for (var i = 0, l = elements.length; i < l; i++)\n    {\n      var element = elements[i],\n          target = element.target,\n          params = element.params,\n          brushName = params.brush,\n          brush,\n          matches,\n          code\n          ;\n\n      if (brushName == null)\n        continue;\n\n      brush = findBrush(brushName);\n\n      if (!brush)\n        continue;\n\n      // local params take precedence over defaults\n      params = optsParser.defaults(params || {}, defaults);\n      params = optsParser.defaults(params, config);\n\n      // Instantiate a brush\n      if (params['html-script'] == true || defaults['html-script'] == true)\n      {\n        brush = new HtmlScript(findBrush('xml'), brush);\n        brushName = 'htmlscript';\n      }\n      else\n      {\n        brush = new brush();\n      }\n\n      code = target[propertyName];\n\n      // remove CDATA from <SCRIPT/> tags if it's present\n      if (conf.useScriptTags)\n        code = stripCData(code);\n\n      // Inject title if the attribute is present\n      if ((target.title || '') != '')\n        params.title = target.title;\n\n      params['brush'] = brushName;\n\n      code = transformers(code, params);\n      matches = match.applyRegexList(code, brush.regexList, params);\n      renderer = new Renderer(code, matches, params);\n\n      element = dom.create('div');\n      element.innerHTML = renderer.getHtml();\n\n      // id = utils.guid();\n      // element.id = highlighters.id(id);\n      // highlighters.set(id, element);\n\n      if (params.quickCode)\n        dom.attachEvent(dom.findElement(element, '.code'), 'dblclick', dom.quickCodeHandler);\n\n      // carry over ID\n      if ((target.id || '') != '')\n        element.id = target.id;\n\n      target.parentNode.replaceChild(element, target);\n    }\n  }\n}; // end of sh\n\n/**\n * Displays an alert.\n * @param {String} str String to display.\n */\nfunction alert(str)\n{\n  window.alert('SyntaxHighlighter\\n\\n' + str);\n};\n\n/**\n * Finds a brush by its alias.\n *\n * @param {String} alias    Brush alias.\n * @param {Boolean} showAlert Suppresses the alert if false.\n * @return {Brush}        Returns bursh constructor if found, null otherwise.\n */\nfunction findBrush(alias, showAlert)\n{\n  var brushes = sh.vars.discoveredBrushes,\n    result = null\n    ;\n\n  if (brushes == null)\n  {\n    brushes = {};\n\n    // Find all brushes\n    for (var brushName in sh.brushes)\n    {\n      var brush = sh.brushes[brushName],\n        aliases = brush.aliases\n        ;\n\n      if (aliases == null) {\n        continue;\n      }\n\n      brush.className = brush.className || brush.aliases[0];\n      brush.brushName = brush.className || brushName.toLowerCase();\n\n      for (var i = 0, l = aliases.length; i < l; i++) {\n        brushes[aliases[i]] = brushName;\n      }\n    }\n\n    sh.vars.discoveredBrushes = brushes;\n  }\n\n  result = sh.brushes[brushes[alias]];\n\n  if (result == null && showAlert)\n    alert(sh.config.strings.noBrush + alias);\n\n  return result;\n};\n\n/**\n * Strips <![CDATA[]]> from <SCRIPT /> content because it should be used\n * there in most cases for XHTML compliance.\n * @param {String} original Input code.\n * @return {String} Returns code without leading <![CDATA[]]> tags.\n */\nfunction stripCData(original)\n{\n  var left = '<![CDATA[',\n    right = ']]>',\n    // for some reason IE inserts some leading blanks here\n    copy = utils.trim(original),\n    changed = false,\n    leftLength = left.length,\n    rightLength = right.length\n    ;\n\n  if (copy.indexOf(left) == 0)\n  {\n    copy = copy.substring(leftLength);\n    changed = true;\n  }\n\n  var copyLength = copy.length;\n\n  if (copy.indexOf(right) == copyLength - rightLength)\n  {\n    copy = copy.substring(0, copyLength - rightLength);\n    changed = true;\n  }\n\n  return changed ? copy : original;\n};\n\nlet brushCounter = 0;\n\nexport default sh;\nexport const registerBrush = brush => sh.brushes['brush' + brushCounter++] = brush.default || brush;\nexport const clearRegisteredBrushes = () => {\n  sh.brushes = {};\n  brushCounter = 0;\n}\n\n/* an EJS hook for `gulp build --brushes` command\n * */\n\n\n\n/*\n\n */\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core.js\n **/","var XRegExp = require('syntaxhighlighter-regex').XRegExp;\n\nvar BOOLEANS = {'true': true, 'false': false};\n\nfunction camelize(key)\n{\n  return key.replace(/-(\\w+)/g, function(match, word)\n  {\n    return word.charAt(0).toUpperCase() + word.substr(1);\n  });\n}\n\nfunction process(value)\n{\n  var result = BOOLEANS[value];\n  return result == null ? value : result;\n}\n\nmodule.exports = {\n  defaults: function(target, source)\n  {\n    for(var key in source || {})\n      if (!target.hasOwnProperty(key))\n        target[key] = target[camelize(key)] = source[key];\n\n    return target;\n  },\n\n  parse: function(str)\n  {\n    var match,\n        key,\n        result = {},\n        arrayRegex = XRegExp(\"^\\\\[(?<values>(.*?))\\\\]$\"),\n        pos = 0,\n        regex = XRegExp(\n          \"(?<name>[\\\\w-]+)\" +\n          \"\\\\s*:\\\\s*\" +\n          \"(?<value>\" +\n            \"[\\\\w%#-]+|\" +    // word\n            \"\\\\[.*?\\\\]|\" +    // [] array\n            '\".*?\"|' +        // \"\" string\n            \"'.*?'\" +         // '' string\n          \")\\\\s*;?\",\n          \"g\"\n        )\n        ;\n\n    while ((match = XRegExp.exec(str, regex, pos)) != null)\n    {\n      var value = match.value\n        .replace(/^['\"]|['\"]$/g, '') // strip quotes from end of strings\n        ;\n\n      // try to parse array value\n      if (value != null && arrayRegex.test(value))\n      {\n        var m = XRegExp.exec(value, arrayRegex);\n        value = m.values.length > 0 ? m.values.split(/\\s*,\\s*/) : [];\n      }\n\n      value = process(value);\n      result[match.name] = result[camelize(match.name)] = value;\n      pos = match.index + match[0].length;\n    }\n\n    return result;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/opts-parser/opts-parser.js\n **/","import XRegExp from './xregexp';\n\nexport { XRegExp };\n\nexport const commonRegExp = {\n  multiLineCComments          : XRegExp('/\\\\*.*?\\\\*/', 'gs'),\n  singleLineCComments         : /\\/\\/.*$/gm,\n  singleLinePerlComments      : /#.*$/gm,\n  doubleQuotedString          : /\"([^\\\\\"\\n]|\\\\.)*\"/g,\n  singleQuotedString          : /'([^\\\\'\\n]|\\\\.)*'/g,\n  multiLineDoubleQuotedString : XRegExp('\"([^\\\\\\\\\"]|\\\\\\\\.)*\"', 'gs'),\n  multiLineSingleQuotedString : XRegExp(\"'([^\\\\\\\\']|\\\\\\\\.)*'\", 'gs'),\n  xmlComments                 : XRegExp('(&lt;|<)!--.*?--(&gt;|>)', 'gs'),\n  url                         : /\\w+:\\/\\/[\\w-.\\/?%&=:@;#]*/g,\n  phpScriptTags               : { left: /(&lt;|<)\\?(?:=|php)?/g, right: /\\?(&gt;|>)/g, 'eof' : true },\n  aspScriptTags               : { left: /(&lt;|<)%=?/g, right: /%(&gt;|>)/g },\n  scriptScriptTags            : { left: /(&lt;|<)\\s*script.*?(&gt;|>)/gi, right: /(&lt;|<)\\/\\s*script\\s*(&gt;|>)/gi }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-regex/index.js\n **/","/*!\n * XRegExp 3.1.0-dev\n * <xregexp.com>\n * Steven Levithan (c) 2007-2015 MIT License\n */\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n    'use strict';\n\n/* ==============================\n * Private variables\n * ============================== */\n\n    // Property name used for extended regex instance data\n    var REGEX_DATA = 'xregexp';\n    // Optional features that can be installed and uninstalled\n    var features = {\n        astral: false,\n        natives: false\n    };\n    // Native methods to use and restore ('native' is an ES3 reserved keyword)\n    var nativ = {\n        exec: RegExp.prototype.exec,\n        test: RegExp.prototype.test,\n        match: String.prototype.match,\n        replace: String.prototype.replace,\n        split: String.prototype.split\n    };\n    // Storage for fixed/extended native methods\n    var fixed = {};\n    // Storage for regexes cached by `XRegExp.cache`\n    var regexCache = {};\n    // Storage for pattern details cached by the `XRegExp` constructor\n    var patternCache = {};\n    // Storage for regex syntax tokens added internally or by `XRegExp.addToken`\n    var tokens = [];\n    // Token scopes\n    var defaultScope = 'default';\n    var classScope = 'class';\n    // Regexes that match native regex syntax, including octals\n    var nativeTokens = {\n        // Any native multicharacter token in default scope, or any single character\n        'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n        // Any native multicharacter token in character class scope, or any single character\n        'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n    };\n    // Any backreference or dollar-prefixed character in replacement strings\n    var replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\n    // Check for correct `exec` handling of nonparticipating capturing groups\n    var correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\n    // Check for ES6 `u` flag support\n    var hasNativeU = (function() {\n        var isSupported = true;\n        try {\n            new RegExp('', 'u');\n        } catch (exception) {\n            isSupported = false;\n        }\n        return isSupported;\n    }());\n    // Check for ES6 `y` flag support\n    var hasNativeY = (function() {\n        var isSupported = true;\n        try {\n            new RegExp('', 'y');\n        } catch (exception) {\n            isSupported = false;\n        }\n        return isSupported;\n    }());\n    // Check for ES6 `flags` prop support\n    var hasFlagsProp = /a/.flags !== undefined;\n    // Tracker for known flags, including addon flags\n    var registeredFlags = {\n        g: true,\n        i: true,\n        m: true,\n        u: hasNativeU,\n        y: hasNativeY\n    };\n    // Shortcut to `Object.prototype.toString`\n    var toString = {}.toString;\n\n/* ==============================\n * Private functions\n * ============================== */\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Augmented regex.\n */\n    function augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n        var p;\n\n        regex[REGEX_DATA] = {\n            captureNames: captureNames\n        };\n\n        if (isInternalOnly) {\n            return regex;\n        }\n\n        // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n        if (regex.__proto__) {\n            regex.__proto__ = XRegExp.prototype;\n        } else {\n            for (p in XRegExp.prototype) {\n                // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since\n                // this is performance sensitive, and enumerable `Object.prototype` or\n                // `RegExp.prototype` extensions exist on `regex.prototype` anyway\n                regex[p] = XRegExp.prototype[p];\n            }\n        }\n\n        regex[REGEX_DATA].source = xSource;\n        // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n        regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n        return regex;\n    }\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @private\n * @param {String} str String to remove duplicate characters from.\n * @returns {String} String with any duplicate characters removed.\n */\n    function clipDuplicates(str) {\n        return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n    }\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @private\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`addG` {Boolean} Add flag g while copying the regex.\n *   <li>`addY` {Boolean} Add flag y while copying the regex.\n *   <li>`removeG` {Boolean} Remove flag g while copying the regex.\n *   <li>`removeY` {Boolean} Remove flag y while copying the regex.\n *   <li>`isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\n    function copyRegex(regex, options) {\n        if (!XRegExp.isRegExp(regex)) {\n            throw new TypeError('Type RegExp expected');\n        }\n\n        var xData = regex[REGEX_DATA] || {},\n            flags = getNativeFlags(regex),\n            flagsToAdd = '',\n            flagsToRemove = '',\n            xregexpSource = null,\n            xregexpFlags = null;\n\n        options = options || {};\n\n        if (options.removeG) {flagsToRemove += 'g';}\n        if (options.removeY) {flagsToRemove += 'y';}\n        if (flagsToRemove) {\n            flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\n        }\n\n        if (options.addG) {flagsToAdd += 'g';}\n        if (options.addY) {flagsToAdd += 'y';}\n        if (flagsToAdd) {\n            flags = clipDuplicates(flags + flagsToAdd);\n        }\n\n        if (!options.isInternalOnly) {\n            if (xData.source !== undefined) {\n                xregexpSource = xData.source;\n            }\n            // null or undefined; don't want to add to `flags` if the previous value was null, since\n            // that indicates we're not tracking original precompilation flags\n            if (xData.flags != null) {\n                // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are\n                // never removed for non-internal regexes, so don't need to handle it\n                xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n            }\n        }\n\n        // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to\n        // avoid searching for special tokens. That would be wrong for regexes constructed by\n        // `RegExp`, and unnecessary for regexes constructed by `XRegExp` because the regex has\n        // already undergone the translation to native regex syntax\n        regex = augment(\n            new RegExp(regex.source, flags),\n            hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\n            xregexpSource,\n            xregexpFlags,\n            options.isInternalOnly\n        );\n\n        return regex;\n    }\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @private\n * @param {String} hex\n * @returns {Number}\n */\n    function dec(hex) {\n        return parseInt(hex, 16);\n    }\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {String} Native flags in use.\n */\n    function getNativeFlags(regex) {\n        return hasFlagsProp ?\n            regex.flags :\n            // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or\n            // concatenation with an empty string) allows this to continue working predictably when\n            // `XRegExp.proptotype.toString` is overriden\n            nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\n    }\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {Boolean} Whether the regex uses named capture.\n */\n    function hasNamedCapture(regex) {\n        return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n    }\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @private\n * @param {Number|String} dec\n * @returns {String}\n */\n    function hex(dec) {\n        return parseInt(dec, 10).toString(16);\n    }\n\n/**\n * Returns the first index at which a given value can be found in an array.\n *\n * @private\n * @param {Array} array Array to search.\n * @param {*} value Value to locate in the array.\n * @returns {Number} Zero-based index at which the item is found, or -1.\n */\n    function indexOf(array, value) {\n        var len = array.length, i;\n\n        for (i = 0; i < len; ++i) {\n            if (array[i] === value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @private\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {Boolean} Whether the object matches the type.\n */\n    function isType(value, type) {\n        return toString.call(value) === '[object ' + type + ']';\n    }\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @private\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next token is a quantifier.\n */\n    function isQuantifierNext(pattern, pos, flags) {\n        return nativ.test.call(\n            flags.indexOf('x') > -1 ?\n                // Ignore any leading whitespace, line comments, and inline comments\n                /^(?:\\s+|#.*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ :\n                // Ignore any leading inline comments\n                /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/,\n            pattern.slice(pos)\n        );\n    }\n\n/**\n * Pads the provided string with as many leading zeros as needed to get to length 4. Used to produce\n * fixed-length hexadecimal values.\n *\n * @private\n * @param {String} str\n * @returns {String}\n */\n    function pad4(str) {\n        while (str.length < 4) {\n            str = '0' + str;\n        }\n        return str;\n    }\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @private\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {Object} Object with properties `pattern` and `flags`.\n */\n    function prepareFlags(pattern, flags) {\n        var i;\n\n        // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n        if (clipDuplicates(flags) !== flags) {\n            throw new SyntaxError('Invalid duplicate regex flag ' + flags);\n        }\n\n        // Strip and apply a leading mode modifier with any combination of flags except g or y\n        pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\n            if (nativ.test.call(/[gy]/, $1)) {\n                throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\n            }\n            // Allow duplicate flags within the mode modifier\n            flags = clipDuplicates(flags + $1);\n            return '';\n        });\n\n        // Throw on unknown native or nonnative flags\n        for (i = 0; i < flags.length; ++i) {\n            if (!registeredFlags[flags.charAt(i)]) {\n                throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\n            }\n        }\n\n        return {\n            pattern: pattern,\n            flags: flags\n        };\n    }\n\n/**\n * Prepares an options object from the given value.\n *\n * @private\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\n    function prepareOptions(value) {\n        var options = {};\n\n        if (isType(value, 'String')) {\n            XRegExp.forEach(value, /[^\\s,]+/, function(match) {\n                options[match] = true;\n            });\n\n            return options;\n        }\n\n        return value;\n    }\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @private\n * @param {String} flag Single-character flag to register.\n */\n    function registerFlag(flag) {\n        if (!/^[\\w$]$/.test(flag)) {\n            throw new Error('Flag must be a single character A-Za-z0-9_$');\n        }\n\n        registeredFlags[flag] = true;\n    }\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @private\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\n    function runTokens(pattern, flags, pos, scope, context) {\n        var i = tokens.length,\n            leadChar = pattern.charAt(pos),\n            result = null,\n            match,\n            t;\n\n        // Run in reverse insertion order\n        while (i--) {\n            t = tokens[i];\n            if (\n                (t.leadChar && t.leadChar !== leadChar) ||\n                (t.scope !== scope && t.scope !== 'all') ||\n                (t.flag && flags.indexOf(t.flag) === -1)\n            ) {\n                continue;\n            }\n\n            match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n            if (match) {\n                result = {\n                    matchLength: match[0].length,\n                    output: t.handler.call(context, match, scope, flags),\n                    reparse: t.reparse\n                };\n                // Finished with token tests\n                break;\n            }\n        }\n\n        return result;\n    }\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\n    function setAstral(on) {\n        features.astral = on;\n    }\n\n/**\n * Enables or disables native method overrides.\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\n    function setNatives(on) {\n        RegExp.prototype.exec = (on ? fixed : nativ).exec;\n        RegExp.prototype.test = (on ? fixed : nativ).test;\n        String.prototype.match = (on ? fixed : nativ).match;\n        String.prototype.replace = (on ? fixed : nativ).replace;\n        String.prototype.split = (on ? fixed : nativ).split;\n\n        features.natives = on;\n    }\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @private\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\n    function toObject(value) {\n        // null or undefined\n        if (value == null) {\n            throw new TypeError('Cannot convert null or undefined to object');\n        }\n\n        return value;\n    }\n\n/* ==============================\n * Constructor\n * ============================== */\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     <li>`g` - global\n *     <li>`i` - ignore case\n *     <li>`m` - multiline anchors\n *     <li>`u` - unicode (ES6)\n *     <li>`y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     <li>`n` - explicit capture\n *     <li>`s` - dot matches all (aka singleline)\n *     <li>`x` - free-spacing and line comments (aka extended)\n *     <li>`A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\n    function XRegExp(pattern, flags) {\n        var context = {\n                hasNamedCapture: false,\n                captureNames: []\n            },\n            scope = defaultScope,\n            output = '',\n            pos = 0,\n            result,\n            token,\n            generated,\n            appliedPattern,\n            appliedFlags;\n\n        if (XRegExp.isRegExp(pattern)) {\n            if (flags !== undefined) {\n                throw new TypeError('Cannot supply flags when copying a RegExp');\n            }\n            return copyRegex(pattern);\n        }\n\n        // Copy the argument behavior of `RegExp`\n        pattern = pattern === undefined ? '' : String(pattern);\n        flags = flags === undefined ? '' : String(flags);\n\n        if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\n            // This causes an error to be thrown if the Unicode Base addon is not available\n            flags += 'A';\n        }\n\n        if (!patternCache[pattern]) {\n            patternCache[pattern] = {};\n        }\n\n        if (!patternCache[pattern][flags]) {\n            // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n            result = prepareFlags(pattern, flags);\n            appliedPattern = result.pattern;\n            appliedFlags = result.flags;\n\n            // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n            // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n            while (pos < appliedPattern.length) {\n                do {\n                    // Check for custom tokens at the current position\n                    result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                    // If the matched token used the `reparse` option, splice its output into the\n                    // pattern before running tokens again at the same position\n                    if (result && result.reparse) {\n                        appliedPattern = appliedPattern.slice(0, pos) +\n                            result.output +\n                            appliedPattern.slice(pos + result.matchLength);\n                    }\n                } while (result && result.reparse);\n\n                if (result) {\n                    output += result.output;\n                    pos += (result.matchLength || 1);\n                } else {\n                    // Get the native token at the current position\n                    token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\n                    output += token;\n                    pos += token.length;\n                    if (token === '[' && scope === defaultScope) {\n                        scope = classScope;\n                    } else if (token === ']' && scope === classScope) {\n                        scope = defaultScope;\n                    }\n                }\n            }\n\n            patternCache[pattern][flags] = {\n                // Cleanup token cruft: repeated `(?:)(?:)` and leading/trailing `(?:)`\n                pattern: nativ.replace.call(output, /\\(\\?:\\)(?:[*+?]|\\{\\d+(?:,\\d*)?})?\\??(?=\\(\\?:\\))|^\\(\\?:\\)(?:[*+?]|\\{\\d+(?:,\\d*)?})?\\??|\\(\\?:\\)(?:[*+?]|\\{\\d+(?:,\\d*)?})?\\??$/g, ''),\n                // Strip all but native flags\n                flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\n                // `context.captureNames` has an item for each capturing group, even if unnamed\n                captures: context.hasNamedCapture ? context.captureNames : null\n            };\n        }\n\n        generated = patternCache[pattern][flags];\n        return augment(\n            new RegExp(generated.pattern, generated.flags),\n            generated.captures,\n            pattern,\n            flags\n        );\n    };\n\n// Add `RegExp.prototype` to the prototype chain\n    XRegExp.prototype = new RegExp();\n\n/* ==============================\n * Public properties\n * ============================== */\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @memberOf XRegExp\n * @type String\n */\n    XRegExp.version = '3.1.0-dev';\n\n/* ==============================\n * Public methods\n * ============================== */\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The regex scope where the match was found: 'default' or 'class'.\n *   <li>The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   <li>`scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   <li>`flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   <li>`optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   <li>`reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   <li>`leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   function() {return '\\\\x07';},\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\n    XRegExp.addToken = function(regex, handler, options) {\n        options = options || {};\n        var optionalFlags = options.optionalFlags, i;\n\n        if (options.flag) {\n            registerFlag(options.flag);\n        }\n\n        if (optionalFlags) {\n            optionalFlags = nativ.split.call(optionalFlags, '');\n            for (i = 0; i < optionalFlags.length; ++i) {\n                registerFlag(optionalFlags[i]);\n            }\n        }\n\n        // Add to the private list of syntax tokens\n        tokens.push({\n            regex: copyRegex(regex, {\n                addG: true,\n                addY: hasNativeY,\n                isInternalOnly: true\n            }),\n            handler: handler,\n            scope: options.scope || defaultScope,\n            flag: options.flag,\n            reparse: options.reparse,\n            leadChar: options.leadChar\n        });\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @memberOf XRegExp\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\n *   // The regex is compiled once only\n * }\n */\n    XRegExp.cache = function(pattern, flags) {\n        if (!regexCache[pattern]) {\n            regexCache[pattern] = {};\n        }\n        return regexCache[pattern][flags] || (\n            regexCache[pattern][flags] = XRegExp(pattern, flags)\n        );\n    };\n\n// Intentionally undocumented\n    XRegExp.cache.flush = function(cacheName) {\n        if (cacheName === 'patterns') {\n            // Flush the pattern cache used by the `XRegExp` constructor\n            patternCache = {};\n        } else {\n            // Flush the regex cache populated by `XRegExp.cache`\n            regexCache = {};\n        }\n    };\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any point within a regex that uses any flags.\n *\n * @memberOf XRegExp\n * @param {String} str String to escape.\n * @returns {String} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\ <\\.>'\n */\n    XRegExp.escape = function(str) {\n        return nativ.replace.call(toObject(str), /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named backreference properties are included on the match array.\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named backreference properties, or `null`.\n * @example\n *\n * // Basic use, with named backreference\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * var pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\n    XRegExp.exec = function(str, regex, pos, sticky) {\n        var cacheKey = 'g',\n            addY = false,\n            match,\n            r2;\n\n        addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\n        if (addY) {\n            cacheKey += 'y';\n        }\n\n        regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.match`/`replace`\n        r2 = regex[REGEX_DATA][cacheKey] || (\n            regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n                addG: true,\n                addY: addY,\n                removeY: sticky === false,\n                isInternalOnly: true\n            })\n        );\n\n        r2.lastIndex = pos = pos || 0;\n\n        // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n        match = fixed.exec.call(r2, str);\n\n        if (sticky && match && match.index !== pos) {\n            match = null;\n        }\n\n        if (regex.global) {\n            regex.lastIndex = match ? r2.lastIndex : 0;\n        }\n\n        return match;\n    };\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   <li>The match array, with named backreference properties.\n *   <li>The zero-based match index.\n *   <li>The string being traversed.\n *   <li>The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * var evens = [];\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\n    XRegExp.forEach = function(str, regex, callback) {\n        var pos = 0,\n            i = -1,\n            match;\n\n        while ((match = XRegExp.exec(str, regex, pos))) {\n            // Because `regex` is provided to `callback`, the function could use the deprecated/\n            // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since\n            // `XRegExp.exec` doesn't use `lastIndex` to set the search position, this can't lead\n            // to an infinite loop, at least. Actually, because of the way `XRegExp.exec` caches\n            // globalized versions of regexes, mutating the regex will not have any effect on the\n            // iteration or matched strings, which is a nice side effect that brings extra safety\n            callback(match, ++i, str, regex);\n\n            pos = match.index + (match[0].length || 1);\n        }\n    };\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * var globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\n    XRegExp.globalize = function(regex) {\n        return copyRegex(regex, {addG: true});\n    };\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * {@link #XRegExp.uninstall}.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // Overrides native regex methods with fixed/extended versions that support named\n *   // backreferences and fix numerous cross-browser bugs\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral natives');\n */\n    XRegExp.install = function(options) {\n        options = prepareOptions(options);\n\n        if (!features.astral && options.astral) {\n            setAstral(true);\n        }\n\n        if (!features.natives && options.natives) {\n            setNatives(true);\n        }\n    };\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @memberOf XRegExp\n * @param {String} feature Name of the feature to check. One of:\n *   <li>`natives`\n *   <li>`astral`\n * @returns {Boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('natives');\n */\n    XRegExp.isInstalled = function(feature) {\n        return !!(features[feature]);\n    };\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @memberOf XRegExp\n * @param {*} value Object to check.\n * @returns {Boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\n    XRegExp.isRegExp = function(value) {\n        return toString.call(value) === '[object RegExp]';\n        //return isType(value, 'RegExp');\n    };\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\n    XRegExp.match = function(str, regex, scope) {\n        var global = (regex.global && scope !== 'one') || scope === 'all',\n            cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY',\n            result,\n            r2;\n\n        regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`replace`\n        r2 = regex[REGEX_DATA][cacheKey] || (\n            regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n                addG: !!global,\n                addY: !!regex.sticky,\n                removeG: scope === 'one',\n                isInternalOnly: true\n            })\n        );\n\n        result = nativ.match.call(toObject(str), r2);\n\n        if (regex.global) {\n            regex.lastIndex = (\n                (scope === 'one' && result) ?\n                    // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n                    (result.index + result[0].length) : 0\n            );\n        }\n\n        return global ? (result || []) : (result && result[0]);\n    };\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\n *         <a href=\"http://www.google.com/\">Google</a>';\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\n    XRegExp.matchChain = function(str, chain) {\n        return (function recurseChain(values, level) {\n            var item = chain[level].regex ? chain[level] : {regex: chain[level]},\n                matches = [],\n                addMatch = function(match) {\n                    if (item.backref) {\n                        /* Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold\n                         * the `undefined`s for backreferences to nonparticipating capturing\n                         * groups. In such cases, a `hasOwnProperty` or `in` check on its own would\n                         * inappropriately throw the exception, so also check if the backreference\n                         * is a number that is within the bounds of the array.\n                         */\n                        if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\n                            throw new ReferenceError('Backreference to undefined group: ' + item.backref);\n                        }\n\n                        matches.push(match[item.backref] || '');\n                    } else {\n                        matches.push(match[0]);\n                    }\n                },\n                i;\n\n            for (i = 0; i < values.length; ++i) {\n                XRegExp.forEach(values[i], item.regex, addMatch);\n            }\n\n            return ((level === chain.length - 1) || !matches.length) ?\n                matches :\n                recurseChain(matches, level + 1);\n        }([str], 0));\n    };\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     <li>$$ - Inserts a literal $ character.\n *     <li>$&, $0 - Inserts the matched substring.\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\n *     <li>$' - Inserts the string that follows the matched substring (right context).\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\n *       backreference n/nn.\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\n *       properties of this first argument.\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\n *     <li>The zero-based index of the match within the total search string.\n *     <li>The total string being searched.\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, function(match) {\n *   return match.last + ', ' + match.first;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\n    XRegExp.replace = function(str, search, replacement, scope) {\n        var isRegex = XRegExp.isRegExp(search),\n            global = (search.global && scope !== 'one') || scope === 'all',\n            cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY',\n            s2 = search,\n            result;\n\n        if (isRegex) {\n            search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n            // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n            // `lastIndex` isn't updated *during* replacement iterations\n            s2 = search[REGEX_DATA][cacheKey] || (\n                search[REGEX_DATA][cacheKey] = copyRegex(search, {\n                    addG: !!global,\n                    addY: !!search.sticky,\n                    removeG: scope === 'one',\n                    isInternalOnly: true\n                })\n            );\n        } else if (global) {\n            s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n        }\n\n        // Fixed `replace` required for named backreferences, etc.\n        result = fixed.replace.call(toObject(str), s2, replacement);\n\n        if (isRegex && search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        }\n\n        return result;\n    };\n\n/**\n * Performs batch processing of string replacements. Used like {@link #XRegExp.replace}, but\n * accepts an array of replacement details. Later replacements operate on the output of earlier\n * replacements. Replacement details are accepted as an array with a regex or string to search for,\n * the replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `${name}`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z${name}'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, function($0) {\n *     return $0.toUpperCase();\n *   }]\n * ]);\n */\n    XRegExp.replaceEach = function(str, replacements) {\n        var i, r;\n\n        for (i = 0; i < replacements.length; ++i) {\n            r = replacements[i];\n            str = XRegExp.replace(str, r[0], r[1], r[2]);\n        }\n\n        return str;\n    };\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\n    XRegExp.split = function(str, separator, limit) {\n        return fixed.split.call(toObject(str), separator, limit);\n    };\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\n    XRegExp.test = function(str, regex, pos, sticky) {\n        // Do this the easy way :-)\n        return !!XRegExp.exec(str, regex, pos, sticky);\n    };\n\n/**\n * Uninstalls optional features according to the specified options. All optional features start out\n * uninstalled, so this is used to undo the actions of {@link #XRegExp.install}.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons\n *   astral: true,\n *\n *   // Restores native regex methods\n *   natives: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral natives');\n */\n    XRegExp.uninstall = function(options) {\n        options = prepareOptions(options);\n\n        if (features.astral && options.astral) {\n            setAstral(false);\n        }\n\n        if (features.natives && options.natives) {\n            setNatives(false);\n        }\n    };\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @memberOf XRegExp\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n */\n    XRegExp.union = function(patterns, flags) {\n        var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\n            output = [],\n            numCaptures = 0,\n            numPriorCaptures,\n            captureNames,\n            pattern,\n            rewrite = function(match, paren, backref) {\n                var name = captureNames[numCaptures - numPriorCaptures];\n\n                // Capturing group\n                if (paren) {\n                    ++numCaptures;\n                    // If the current capture has a name, preserve the name\n                    if (name) {\n                        return '(?<' + name + '>';\n                    }\n                // Backreference\n                } else if (backref) {\n                    // Rewrite the backreference\n                    return '\\\\' + (+backref + numPriorCaptures);\n                }\n\n                return match;\n            },\n            i;\n\n        if (!(isType(patterns, 'Array') && patterns.length)) {\n            throw new TypeError('Must provide a nonempty array of patterns to merge');\n        }\n\n        for (i = 0; i < patterns.length; ++i) {\n            pattern = patterns[i];\n\n            if (XRegExp.isRegExp(pattern)) {\n                numPriorCaptures = numCaptures;\n                captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\n\n                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns\n                // are independently valid; helps keep this simple. Named captures are put back\n                output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\n            } else {\n                output.push(XRegExp.escape(pattern));\n            }\n        }\n\n        return XRegExp(output.join('|'), flags);\n    };\n\n/* ==============================\n * Fixed/extended native methods\n * ============================== */\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\n * override the native method. Use via `XRegExp.exec` without overriding natives.\n *\n * @private\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\n    fixed.exec = function(str) {\n        var origLastIndex = this.lastIndex,\n            match = nativ.exec.apply(this, arguments),\n            name,\n            r2,\n            i;\n\n        if (match) {\n            // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating\n            // capturing groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of\n            // older IEs. IE 9 in standards mode follows the spec\n            if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\n                r2 = copyRegex(this, {\n                    removeG: true,\n                    isInternalOnly: true\n                });\n                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n                // matching due to characters outside the match\n                nativ.replace.call(String(str).slice(match.index), r2, function() {\n                    var len = arguments.length, i;\n                    // Skip index 0 and the last 2\n                    for (i = 1; i < len - 2; ++i) {\n                        if (arguments[i] === undefined) {\n                            match[i] = undefined;\n                        }\n                    }\n                });\n            }\n\n            // Attach named capture properties\n            if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n                // Skip index 0\n                for (i = 1; i < match.length; ++i) {\n                    name = this[REGEX_DATA].captureNames[i - 1];\n                    if (name) {\n                        match[name] = match[i];\n                    }\n                }\n            }\n\n            // Fix browsers that increment `lastIndex` after zero-length matches\n            if (this.global && !match[0].length && (this.lastIndex > match.index)) {\n                this.lastIndex = match.index;\n            }\n        }\n\n        if (!this.global) {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            this.lastIndex = origLastIndex;\n        }\n\n        return match;\n    };\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\n * uses this to override the native method.\n *\n * @private\n * @param {String} str String to search.\n * @returns {Boolean} Whether the regex matched the provided value.\n */\n    fixed.test = function(str) {\n        // Do this the easy way :-)\n        return !!fixed.exec.call(this, str);\n    };\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\n * override the native method.\n *\n * @private\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\n    fixed.match = function(regex) {\n        var result;\n\n        if (!XRegExp.isRegExp(regex)) {\n            // Use the native `RegExp` rather than `XRegExp`\n            regex = new RegExp(regex);\n        } else if (regex.global) {\n            result = nativ.match.apply(this, arguments);\n            // Fixes IE bug\n            regex.lastIndex = 0;\n\n            return result;\n        }\n\n        return fixed.exec.call(regex, toObject(this));\n    };\n\n/**\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\n * `XRegExp.replace` without overriding natives.\n *\n * @private\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {String} New string with one or all matches replaced.\n */\n    fixed.replace = function(search, replacement) {\n        var isRegex = XRegExp.isRegExp(search),\n            origLastIndex,\n            captureNames,\n            result;\n\n        if (isRegex) {\n            if (search[REGEX_DATA]) {\n                captureNames = search[REGEX_DATA].captureNames;\n            }\n            // Only needed if `search` is nonglobal\n            origLastIndex = search.lastIndex;\n        } else {\n            search += ''; // Type-convert\n        }\n\n        // Don't use `typeof`; some older browsers return 'function' for regex objects\n        if (isType(replacement, 'Function')) {\n            // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n            // functions isn't type-converted to a string\n            result = nativ.replace.call(String(this), search, function() {\n                var args = arguments, i;\n                if (captureNames) {\n                    // Change the `arguments[0]` string primitive to a `String` object that can\n                    // store properties. This really does need to use `String` as a constructor\n                    args[0] = new String(args[0]);\n                    // Store named backreferences on the first argument\n                    for (i = 0; i < captureNames.length; ++i) {\n                        if (captureNames[i]) {\n                            args[0][captureNames[i]] = args[i + 1];\n                        }\n                    }\n                }\n                // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox,\n                // Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\n                if (isRegex && search.global) {\n                    search.lastIndex = args[args.length - 2] + args[0].length;\n                }\n                // ES6 specs the context for replacement functions as `undefined`\n                return replacement.apply(undefined, args);\n            });\n        } else {\n            // Ensure that the last value of `args` will be a string when given nonstring `this`,\n            // while still throwing on null or undefined context\n            result = nativ.replace.call(this == null ? this : String(this), search, function() {\n                // Keep this function's `arguments` available through closure\n                var args = arguments;\n                return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\n                    var n;\n                    // Named or numbered backreference with curly braces\n                    if ($1) {\n                        // XRegExp behavior for `${n}`:\n                        // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for\n                        //    for the entire match. Any number of leading zeros may be used.\n                        // 2. Backreference to named capture `n`, if it exists and is not an\n                        //    integer overridden by numbered capture. In practice, this does not\n                        //    overlap with numbered capture since XRegExp does not allow named\n                        //    capture to use a bare integer as the name.\n                        // 3. If the name or number does not refer to an existing capturing group,\n                        //    it's an error.\n                        n = +$1; // Type-convert; drop leading zeros\n                        if (n <= args.length - 3) {\n                            return args[n] || '';\n                        }\n                        // Groups with the same name is an error, else would need `lastIndexOf`\n                        n = captureNames ? indexOf(captureNames, $1) : -1;\n                        if (n < 0) {\n                            throw new SyntaxError('Backreference to undefined group ' + $0);\n                        }\n                        return args[n + 1] || '';\n                    }\n                    // Else, special variable or numbered backreference without curly braces\n                    if ($2 === '$') { // $$\n                        return '$';\n                    }\n                    if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\n                        return args[0];\n                    }\n                    if ($2 === '`') { // $` (left context)\n                        return args[args.length - 1].slice(0, args[args.length - 2]);\n                    }\n                    if ($2 === \"'\") { // $' (right context)\n                        return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                    }\n                    // Else, numbered backreference without curly braces\n                    $2 = +$2; // Type-convert; drop leading zero\n                    // XRegExp behavior for `$n` and `$nn`:\n                    // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\n                    // - `$1` is an error if no capturing groups.\n                    // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\n                    // - `$01` is `$1` if at least one capturing group, else it's an error.\n                    // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                    // Native behavior, for comparison:\n                    // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                    // - `$1` is a literal `$1` if no capturing groups.\n                    // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                    // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                    // - `$0` is a literal `$0`.\n                    if (!isNaN($2)) {\n                        if ($2 > args.length - 3) {\n                            throw new SyntaxError('Backreference to undefined group ' + $0);\n                        }\n                        return args[$2] || '';\n                    }\n                    // `$` followed by an unsupported char is an error, unlike native JS\n                    throw new SyntaxError('Invalid token ' + $0);\n                });\n            });\n        }\n\n        if (isRegex) {\n            if (search.global) {\n                // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n                search.lastIndex = 0;\n            } else {\n                // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n                search.lastIndex = origLastIndex;\n            }\n        }\n\n        return result;\n    };\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\n *\n * @private\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n */\n    fixed.split = function(separator, limit) {\n        if (!XRegExp.isRegExp(separator)) {\n            // Browsers handle nonregex split correctly, so use the faster native method\n            return nativ.split.apply(this, arguments);\n        }\n\n        var str = String(this),\n            output = [],\n            origLastIndex = separator.lastIndex,\n            lastLastIndex = 0,\n            lastLength;\n\n        // Values for `limit`, per the spec:\n        // If undefined: pow(2,32) - 1\n        // If 0, Infinity, or NaN: 0\n        // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n        // If negative number: pow(2,32) - floor(abs(limit))\n        // If other: Type-convert, then use the above rules\n        // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63,\n        // unless Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n        limit = (limit === undefined ? -1 : limit) >>> 0;\n\n        XRegExp.forEach(str, separator, function(match) {\n            // This condition is not the same as `if (match[0].length)`\n            if ((match.index + match[0].length) > lastLastIndex) {\n                output.push(str.slice(lastLastIndex, match.index));\n                if (match.length > 1 && match.index < str.length) {\n                    Array.prototype.push.apply(output, match.slice(1));\n                }\n                lastLength = match[0].length;\n                lastLastIndex = match.index + lastLength;\n            }\n        });\n\n        if (lastLastIndex === str.length) {\n            if (!nativ.test.call(separator, '') || lastLength) {\n                output.push('');\n            }\n        } else {\n            output.push(str.slice(lastLastIndex));\n        }\n\n        separator.lastIndex = origLastIndex;\n        return output.length > limit ? output.slice(0, limit) : output;\n    };\n\n/* ==============================\n * Built-in syntax/flag tokens\n * ============================== */\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\n    XRegExp.addToken(\n        /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\n        function(match, scope) {\n            // \\B is allowed in default scope only\n            if (match[1] === 'B' && scope === defaultScope) {\n                return match[0];\n            }\n            throw new SyntaxError('Invalid escape ' + match[0]);\n        },\n        {\n            scope: 'all',\n            leadChar: '\\\\'\n        }\n    );\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\n    XRegExp.addToken(\n        /\\\\u{([\\dA-Fa-f]+)}/,\n        function(match, scope, flags) {\n            var code = dec(match[1]);\n            if (code > 0x10FFFF) {\n                throw new SyntaxError('Invalid Unicode code point ' + match[0]);\n            }\n            if (code <= 0xFFFF) {\n                // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n                // separate from preceding tokens\n                return '\\\\u' + pad4(hex(code));\n            }\n            // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n            if (hasNativeU && flags.indexOf('u') > -1) {\n                return match[0];\n            }\n            throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n        },\n        {\n            scope: 'all',\n            leadChar: '\\\\'\n        }\n    );\n\n/*\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\n * character class endings can't be determined.\n */\n    XRegExp.addToken(\n        /\\[(\\^?)]/,\n        function(match) {\n            // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\n            // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\n            return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\n        },\n        {leadChar: '['}\n    );\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\n    XRegExp.addToken(\n        /\\(\\?#[^)]*\\)/,\n        function(match, scope, flags) {\n            // Keep tokens separated unless the following token is a quantifier\n            return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n                '' : '(?:)';\n        },\n        {leadChar: '('}\n    );\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\n    XRegExp.addToken(\n        /\\s+|#.*/,\n        function(match, scope, flags) {\n            // Keep tokens separated unless the following token is a quantifier\n            return isQuantifierNext(match.input, match.index + match[0].length, flags) ?\n                '' : '(?:)';\n        },\n        {flag: 'x'}\n    );\n\n/*\n * Dot, in dotall mode (aka singleline mode, flag s) only.\n */\n    XRegExp.addToken(\n        /\\./,\n        function() {\n            return '[\\\\s\\\\S]';\n        },\n        {\n            flag: 's',\n            leadChar: '.'\n        }\n    );\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\n */\n    XRegExp.addToken(\n        /\\\\k<([\\w$]+)>/,\n        function(match) {\n            // Groups with the same name is an error, else would need `lastIndexOf`\n            var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1],\n                endIndex = match.index + match[0].length;\n            if (!index || index > this.captureNames.length) {\n                throw new SyntaxError('Backreference to undefined group ' + match[0]);\n            }\n            // Keep backreferences separate from subsequent literal numbers\n            return '\\\\' + index + (\n                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\n                    '' : '(?:)'\n            );\n        },\n        {leadChar: '\\\\'}\n    );\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\n    XRegExp.addToken(\n        /\\\\(\\d+)/,\n        function(match, scope) {\n            if (\n                !(\n                    scope === defaultScope &&\n                    /^[1-9]/.test(match[1]) &&\n                    +match[1] <= this.captureNames.length\n                ) &&\n                match[1] !== '0'\n            ) {\n                throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\n                    match[0]);\n            }\n            return match[0];\n        },\n        {\n            scope: 'all',\n            leadChar: '\\\\'\n        }\n    );\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\n    XRegExp.addToken(\n        /\\(\\?P?<([\\w$]+)>/,\n        function(match) {\n            // Disallow bare integers as names because named backreferences are added to match\n            // arrays and therefore numeric properties may lead to incorrect lookups\n            if (!isNaN(match[1])) {\n                throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\n            }\n            if (match[1] === 'length' || match[1] === '__proto__') {\n                throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\n            }\n            if (indexOf(this.captureNames, match[1]) > -1) {\n                throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\n            }\n            this.captureNames.push(match[1]);\n            this.hasNamedCapture = true;\n            return '(';\n        },\n        {leadChar: '('}\n    );\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\n    XRegExp.addToken(\n        /\\((?!\\?)/,\n        function(match, scope, flags) {\n            if (flags.indexOf('n') > -1) {\n                return '(?:';\n            }\n            this.captureNames.push(null);\n            return '(';\n        },\n        {\n            optionalFlags: 'n',\n            leadChar: '('\n        }\n    );\n\n/* ==============================\n * Expose XRegExp\n * ============================== */\n\n    module.exports = XRegExp;\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-regex/xregexp.js\n **/","export class Match {\n  constructor(value, index, css) {\n    this.value = value;\n    this.index = index;\n    this.length = value.length;\n    this.css = css;\n    this.brushName = null;\n  }\n\n  toString() {\n    return this.value;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-match/lib/match.js\n **/","import { find, sort, removeNested, compact } from './matches';\n\n/**\n * Applies all regular expression to the code and stores all found\n * matches in the `this.matches` array.\n */\nexport function applyRegexList(code, regexList)\n{\n  let result = [];\n\n  regexList = regexList || [];\n\n  for (let i = 0, l = regexList.length; i < l; i++) {\n    // BUG: length returns len+1 for array if methods added to prototype chain (oising@gmail.com)\n    if (typeof regexList[i] === 'object')\n      result = result.concat(find(code, regexList[i]));\n  }\n\n  result = sort(result);\n  result = removeNested(result);\n  result = compact(result);\n\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-match/lib/apply-regex-list.js\n **/","import { Match } from './match';\nimport { XRegExp } from 'syntaxhighlighter-regex';\n\n/**\n * Executes given regular expression on provided code and returns all matches that are found.\n *\n * @param {String} code    Code to execute regular expression on.\n * @param {Object} regex   Regular expression item info from `regexList` collection.\n * @return {Array}         Returns a list of Match objects.\n */\nexport function find(code, regexInfo)\n{\n  function defaultAdd(match, regexInfo)\n  {\n    return match[0];\n  };\n\n  var index = 0,\n      match = null,\n      matches = [],\n      process = regexInfo.func ? regexInfo.func : defaultAdd,\n      pos = 0\n      ;\n\n  while(match = XRegExp.exec(code, regexInfo.regex, pos))\n  {\n    var resultMatch = process(match, regexInfo);\n\n    if (typeof resultMatch === 'string')\n      resultMatch = [new Match(resultMatch, match.index, regexInfo.css)];\n\n    matches = matches.concat(resultMatch);\n    pos = match.index + match[0].length;\n  }\n\n  return matches;\n};\n\n/**\n * Sorts matches by index position and then by length.\n */\nexport function sort(matches)\n{\n  function sortMatchesCallback(m1, m2)\n  {\n    // sort matches by index first\n    if(m1.index < m2.index)\n      return -1;\n    else if(m1.index > m2.index)\n      return 1;\n    else\n    {\n      // if index is the same, sort by length\n      if(m1.length < m2.length)\n        return -1;\n      else if(m1.length > m2.length)\n        return 1;\n    }\n\n    return 0;\n  }\n\n  return matches.sort(sortMatchesCallback);\n}\n\nexport function compact(matches)\n{\n  var result = [], i, l;\n\n  for (i = 0, l = matches.length; i < l; i++)\n    if (matches[i])\n      result.push(matches[i]);\n\n  return result;\n}\n\n/**\n * Checks to see if any of the matches are inside of other matches.\n * This process would get rid of highligted strings inside comments,\n * keywords inside strings and so on.\n */\nexport function removeNested(matches)\n{\n  // Optimized by Jose Prado (http://joseprado.com)\n  for (var i = 0, l = matches.length; i < l; i++)\n  {\n    if (matches[i] === null)\n      continue;\n\n    var itemI = matches[i],\n        itemIEndPos = itemI.index + itemI.length\n        ;\n\n    for (var j = i + 1, l = matches.length; j < l && matches[i] !== null; j++)\n    {\n      var itemJ = matches[j];\n\n      if (itemJ === null)\n        continue;\n      else if (itemJ.index > itemIEndPos)\n        break;\n      else if (itemJ.index == itemI.index && itemJ.length > itemI.length)\n        matches[i] = null;\n      else if (itemJ.index >= itemI.index && itemJ.index < itemIEndPos)\n        matches[j] = null;\n    }\n  }\n\n  return matches;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-match/lib/matches.js\n **/","/**\n * Pads number with zeros until it's length is the same as given length.\n *\n * @param {Number} number Number to pad.\n * @param {Number} length Max string length with.\n * @return {String}     Returns a string padded with proper amount of '0'.\n */\nfunction padNumber(number, length)\n{\n  var result = number.toString();\n\n  while (result.length < length)\n    result = '0' + result;\n\n  return result;\n};\n\nfunction getLines(str)\n{\n  return str.split(/\\r?\\n/);\n}\n\nfunction getLinesToHighlight(opts)\n{\n  var results = {},\n      linesToHighlight,\n      l,\n      i\n      ;\n\n  linesToHighlight = opts.highlight || [];\n\n  if (typeof(linesToHighlight.push) !== 'function')\n    linesToHighlight = [linesToHighlight];\n\n  for (i = 0, l = linesToHighlight.length; i < l; i++)\n    results[linesToHighlight[i]] = true;\n\n  return results;\n}\n\nexport default function Renderer(code, matches, opts)\n{\n  var _this = this;\n\n  _this.opts = opts;\n  _this.code = code;\n  _this.matches = matches;\n  _this.lines = getLines(code);\n  _this.linesToHighlight = getLinesToHighlight(opts);\n}\n\nRenderer.prototype = {\n  /**\n   * Wraps each line of the string into <code/> tag with given style applied to it.\n   *\n   * @param {String} str   Input string.\n   * @param {String} css   Style name to apply to the string.\n   * @return {String}      Returns input string with each line surrounded by <span/> tag.\n   */\n  wrapLinesWithCode: function(str, css)\n  {\n    if (str == null || str.length == 0 || str == '\\n' || css == null)\n      return str;\n\n    var _this = this,\n        results = [],\n        lines,\n        line,\n        spaces,\n        i,\n        l\n        ;\n\n    str = str.replace(/</g, '&lt;');\n\n    // Replace two or more sequential spaces with &nbsp; leaving last space untouched.\n    str = str.replace(/ {2,}/g, function(m)\n    {\n      spaces = '';\n\n      for (i = 0, l = m.length; i < l - 1; i++)\n        spaces += _this.opts.space;\n\n      return spaces + ' ';\n    });\n\n    lines = getLines(str);\n\n    // Split each line and apply <span class=\"...\">...</span> to them so that leading spaces aren't included.\n    for (i = 0, l = lines.length; i < l; i++)\n    {\n      line = lines[i];\n      spaces = '';\n\n      if (line.length > 0)\n      {\n        line = line.replace(/^(&nbsp;| )+/, function(s)\n        {\n          spaces = s;\n          return '';\n        });\n\n        line = line.length === 0\n          ? spaces\n          : spaces + '<code class=\"' + css + '\">' + line + '</code>'\n          ;\n      }\n\n      results.push(line);\n    }\n\n    return results.join('\\n');\n  },\n\n  /**\n   * Turns all URLs in the code into <a/> tags.\n   * @param {String} code Input code.\n   * @return {String} Returns code with </a> tags.\n   */\n  processUrls: function(code)\n  {\n    var gt = /(.*)((&gt;|&lt;).*)/,\n        url = /\\w+:\\/\\/[\\w-.\\/?%&=:@;#]*/g\n        ;\n\n    return code.replace(url, function(m)\n    {\n      var suffix = '',\n          match = null\n          ;\n\n      // We include &lt; and &gt; in the URL for the common cases like <http://google.com>\n      // The problem is that they get transformed into &lt;http://google.com&gt;\n      // Where as &gt; easily looks like part of the URL string.\n\n      if (match = gt.exec(m))\n      {\n        m = match[1];\n        suffix = match[2];\n      }\n\n      return '<a href=\"' + m + '\">' + m + '</a>' + suffix;\n    });\n  },\n\n  /**\n   * Creates an array containing integer line numbers starting from the 'first-line' param.\n   * @return {Array} Returns array of integers.\n   */\n  figureOutLineNumbers: function(code)\n  {\n    var lineNumbers = [],\n        lines = this.lines,\n        firstLine = parseInt(this.opts.firstLine || 1),\n        i,\n        l\n        ;\n\n    for (i = 0, l = lines.length; i < l; i++)\n      lineNumbers.push(i + firstLine);\n\n    return lineNumbers;\n  },\n\n  /**\n   * Generates HTML markup for a single line of code while determining alternating line style.\n   * @param {Integer} lineNumber  Line number.\n   * @param {String} code Line  HTML markup.\n   * @return {String}       Returns HTML markup.\n   */\n  wrapLine: function(lineIndex, lineNumber, lineHtml)\n  {\n    var classes = [\n      'line',\n      'number' + lineNumber,\n      'index' + lineIndex,\n      'alt' + (lineNumber % 2 == 0 ? 1 : 2).toString()\n    ];\n\n    if (this.linesToHighlight[lineNumber])\n      classes.push('highlighted');\n\n    if (lineNumber == 0)\n      classes.push('break');\n\n    return '<div class=\"' + classes.join(' ') + '\">' + lineHtml + '</div>';\n  },\n\n  /**\n   * Generates HTML markup for line number column.\n   * @param {String} code     Complete code HTML markup.\n   * @param {Array} lineNumbers Calculated line numbers.\n   * @return {String}       Returns HTML markup.\n   */\n  renderLineNumbers: function(code, lineNumbers)\n  {\n    var _this = this,\n        opts = _this.opts,\n        html = '',\n        count = _this.lines.length,\n        firstLine = parseInt(opts.firstLine || 1),\n        pad = opts.padLineNumbers,\n        lineNumber,\n        i\n        ;\n\n    if (pad == true)\n      pad = (firstLine + count - 1).toString().length;\n    else if (isNaN(pad) == true)\n      pad = 0;\n\n    for (i = 0; i < count; i++)\n    {\n      lineNumber = lineNumbers ? lineNumbers[i] : firstLine + i;\n      code = lineNumber == 0 ? opts.space : padNumber(lineNumber, pad);\n      html += _this.wrapLine(i, lineNumber, code);\n    }\n\n    return html;\n  },\n\n  /**\n   * Splits block of text into individual DIV lines.\n   * @param {String} code     Code to highlight.\n   * @param {Array} lineNumbers Calculated line numbers.\n   * @return {String}       Returns highlighted code in HTML form.\n   */\n  getCodeLinesHtml: function(html, lineNumbers)\n  {\n    // html = utils.trim(html);\n\n    var _this = this,\n        opts = _this.opts,\n        lines = getLines(html),\n        padLength = opts.padLineNumbers,\n        firstLine = parseInt(opts.firstLine || 1),\n        brushName = opts.brush,\n        html = ''\n        ;\n\n    for (var i = 0, l = lines.length; i < l; i++)\n    {\n      var line = lines[i],\n          indent = /^(&nbsp;|\\s)+/.exec(line),\n          spaces = null,\n          lineNumber = lineNumbers ? lineNumbers[i] : firstLine + i;\n          ;\n\n      if (indent != null)\n      {\n        spaces = indent[0].toString();\n        line = line.substr(spaces.length);\n        spaces = spaces.replace(' ', opts.space);\n      }\n\n      // line = utils.trim(line);\n\n      if (line.length == 0)\n        line = opts.space;\n\n      html += _this.wrapLine(\n        i,\n        lineNumber,\n        (spaces != null ? '<code class=\"' + brushName + ' spaces\">' + spaces + '</code>' : '') + line\n      );\n    }\n\n    return html;\n  },\n\n  /**\n   * Returns HTML for the table title or empty string if title is null.\n   */\n  getTitleHtml: function(title)\n  {\n    return title ? '<caption>' + title + '</caption>' : '';\n  },\n\n  /**\n   * Finds all matches in the source code.\n   * @param {String} code   Source code to process matches in.\n   * @param {Array} matches Discovered regex matches.\n   * @return {String} Returns formatted HTML with processed mathes.\n   */\n  getMatchesHtml: function(code, matches)\n  {\n    function getBrushNameCss(match)\n    {\n      var result = match ? (match.brushName || brushName) : brushName;\n      return result ? result + ' ' : '';\n    };\n\n    var _this = this,\n        pos = 0,\n        result = '',\n        brushName = _this.opts.brush || '',\n        match,\n        matchBrushName,\n        i,\n        l\n        ;\n\n    // Finally, go through the final list of matches and pull the all\n    // together adding everything in between that isn't a match.\n    for (i = 0, l = matches.length; i < l; i++)\n    {\n      match = matches[i];\n\n      if (match === null || match.length === 0)\n        continue;\n\n      matchBrushName = getBrushNameCss(match);\n\n      result += _this.wrapLinesWithCode(code.substr(pos, match.index - pos), matchBrushName + 'plain')\n          + _this.wrapLinesWithCode(match.value, matchBrushName + match.css)\n          ;\n\n      pos = match.index + match.length + (match.offset || 0);\n    }\n\n    // don't forget to add whatever's remaining in the string\n    result += _this.wrapLinesWithCode(code.substr(pos), getBrushNameCss() + 'plain');\n\n    return result;\n  },\n\n  /**\n   * Generates HTML markup for the whole syntax highlighter.\n   * @param {String} code Source code.\n   * @return {String} Returns HTML markup.\n   */\n  getHtml: function()\n  {\n    var _this = this,\n        opts = _this.opts,\n        code = _this.code,\n        matches = _this.matches,\n        classes = ['syntaxhighlighter'],\n        lineNumbers,\n        gutter,\n        html\n        ;\n\n    if (opts.collapse === true)\n      classes.push('collapsed');\n\n    gutter = opts.gutter !== false;\n\n    if (!gutter)\n      classes.push('nogutter');\n\n    // add custom user style name\n    classes.push(opts.className);\n\n    // add brush alias to the class name for custom CSS\n    classes.push(opts.brush);\n\n    if (gutter)\n      lineNumbers = _this.figureOutLineNumbers(code);\n\n    // processes found matches into the html\n    html = _this.getMatchesHtml(code, matches);\n\n    // finally, split all lines so that they wrap well\n    html = _this.getCodeLinesHtml(html, lineNumbers);\n\n    // finally, process the links\n    if (opts.autoLinks)\n      html = _this.processUrls(html);\n\n    html = `\n      <div class=\"${classes.join(' ')}\">\n        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n          ${_this.getTitleHtml(opts.title)}\n          <tbody>\n            <tr>\n              ${gutter ? `<td class=\"gutter\">${_this.renderLineNumbers(code)}</td>` : ``}\n              <td class=\"code\">\n                <div class=\"container\">${html}</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    `;\n\n    return html;\n  },\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/syntaxhighlighter-html-renderer/index.js\n **/","/**\n * Splits block of text into lines.\n * @param {String} block Block of text.\n * @return {Array} Returns array of lines.\n */\nfunction splitLines(block)\n{\n  return block.split(/\\r?\\n/);\n}\n\n/**\n * Executes a callback on each line and replaces each line with result from the callback.\n * @param {Object} str      Input string.\n * @param {Object} callback   Callback function taking one string argument and returning a string.\n */\nfunction eachLine(str, callback)\n{\n  var lines = splitLines(str);\n\n  for (var i = 0, l = lines.length; i < l; i++)\n    lines[i] = callback(lines[i], i);\n\n  return lines.join('\\n');\n}\n\n/**\n * Generates a unique element ID.\n */\nfunction guid(prefix)\n{\n  return (prefix || '') + Math.round(Math.random() * 1000000).toString();\n}\n\n/**\n * Merges two objects. Values from obj2 override values in obj1.\n * Function is NOT recursive and works only for one dimensional objects.\n * @param {Object} obj1 First object.\n * @param {Object} obj2 Second object.\n * @return {Object} Returns combination of both objects.\n */\nfunction merge(obj1, obj2)\n{\n  var result = {}, name;\n\n  for (name in obj1)\n    result[name] = obj1[name];\n\n  for (name in obj2)\n    result[name] = obj2[name];\n\n  return result;\n}\n\n/**\n * Removes all white space at the begining and end of a string.\n *\n * @param {String} str   String to trim.\n * @return {String}      Returns string without leading and following white space characters.\n */\nfunction trim(str)\n{\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Converts the source to array object. Mostly used for function arguments and\n * lists returned by getElementsByTagName() which aren't Array objects.\n * @param {List} source Source list.\n * @return {Array} Returns array.\n */\nfunction toArray(source)\n{\n  return Array.prototype.slice.apply(source);\n}\n\n/**\n * Attempts to convert string to boolean.\n * @param {String} value Input string.\n * @return {Boolean} Returns true if input was \"true\", false if input was \"false\" and value otherwise.\n */\nfunction toBoolean(value)\n{\n  var result = {\"true\" : true, \"false\" : false}[value];\n  return result == null ? value : result;\n}\n\nmodule.exports = {\n  splitLines: splitLines,\n  eachLine: eachLine,\n  guid: guid,\n  merge: merge,\n  trim: trim,\n  toArray: toArray,\n  toBoolean: toBoolean\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","var\n  trim        = require('./trim'),\n  bloggerMode = require('./blogger_mode'),\n  stripBrs    = require('./strip_brs'),\n  unindenter  = require('unindenter'),\n  retabber    = require('retabber')\n  ;\n\nmodule.exports = function(code, opts)\n{\n  code = trim(code, opts);\n  code = bloggerMode(code, opts);\n  code = stripBrs(code, opts);\n  code = unindenter.unindent(code, opts);\n\n  var tabSize = opts['tab-size'];\n  code = opts['smart-tabs'] === true ? retabber.smart(code, tabSize) : retabber.regular(code, tabSize);\n\n  return code;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/index.js\n **/","module.exports = function(code, opts)\n{\n  return code\n     // This is a special trim which only removes first and last empty lines\n     // and doesn't affect valid leading space on the first line.\n    .replace(/^[ ]*[\\n]+|[\\n]*[ ]*$/g, '')\n\n    // IE lets these buggers through\n    .replace(/\\r/g, ' ')\n    ;\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/trim.js\n **/","module.exports = function(code, opts) {\n  var br = /<br\\s*\\/?>|&lt;br\\s*\\/?&gt;/gi;\n\n  if (opts['bloggerMode'] === true)\n    code = code.replace(br, '\\n');\n\n  return code;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/blogger_mode.js\n **/","module.exports = function(code, opts)\n{\n  var br = /<br\\s*\\/?>|&lt;br\\s*\\/?&gt;/gi;\n\n  if (opts['stripBrs'] === true)\n    code = code.replace(br, '');\n\n  return code;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transformers/strip_brs.js\n **/","function isEmpty(str)\n{\n  return /^\\s*$/.test(str);\n}\n\nmodule.exports = {\n  unindent: function(code)\n  {\n    var lines = code.split(/\\r?\\n/),\n        regex = /^\\s*/,\n        min = 1000,\n        line,\n        matches,\n        i,\n        l\n        ;\n\n    // go through every line and check for common number of indents\n    for (i = 0, l = lines.length; i < l && min > 0; i++)\n    {\n      line = lines[i];\n\n      if (isEmpty(line))\n        continue;\n\n      matches = regex.exec(line);\n\n      // In the event that just one line doesn't have leading white space\n      // we can't unindent anything, so bail completely.\n      if (matches == null)\n        return code;\n\n      min = Math.min(matches[0].length, min);\n    }\n\n    // trim minimum common number of white space from the begining of every line\n    if (min > 0)\n      for (i = 0, l = lines.length; i < l; i++)\n        if (!isEmpty(lines[i]))\n          lines[i] = lines[i].substr(min);\n\n    return lines.join('\\n');\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/unindenter/unindenter.js\n **/","var spaces = '';\n\n// Create a string with 1000 spaces to copy spaces from...\n// It's assumed that there would be no indentation longer than that.\nfor (var i = 0; i < 50; i++)\n  spaces += '                    '; // 20 spaces * 50\n\n// This function inserts specified amount of spaces in the string\n// where a tab is while removing that given tab.\nfunction insertSpaces(line, pos, count)\n{\n  return line.substr(0, pos)\n    + spaces.substr(0, count)\n    + line.substr(pos + 1, line.length) // pos + 1 will get rid of the tab\n    ;\n}\n\nmodule.exports = {\n  smart: function(code, tabSize)\n  {\n    var lines = code.split(/\\r?\\n/),\n        tab = '\\t',\n        line,\n        pos,\n        i,\n        l\n        ;\n\n    // Go through all the lines and do the 'smart tabs' magic.\n    for (i = 0, l = lines.length; i < l; i++)\n    {\n      line = lines[i];\n\n      if (line.indexOf(tab) === -1)\n        continue;\n\n      pos = 0;\n\n      while ((pos = line.indexOf(tab)) !== -1)\n      {\n        // This is pretty much all there is to the 'smart tabs' logic.\n        // Based on the position within the line and size of a tab,\n        // calculate the amount of spaces we need to insert.\n        line = insertSpaces(line, pos, tabSize - pos % tabSize);\n      }\n\n      lines[i] = line;\n    }\n\n    return lines.join('\\n');\n  },\n\n  regular: function(code, tabSize)\n  {\n    return code.replace(/\\t/g, spaces.substr(0, tabSize));\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/retabber/retabber.js\n **/","/**\n * Finds all &lt;SCRIPT TYPE=\"text/syntaxhighlighter\" /> elementss.\n * Finds both \"text/syntaxhighlighter\" and \"syntaxhighlighter\"\n * ...in order to make W3C validator happy with subtype and backwardscompatible without subtype\n * @return {Array} Returns array of all found SyntaxHighlighter tags.\n */\nfunction getSyntaxHighlighterScriptTags()\n{\n  var tags = document.getElementsByTagName('script'),\n    result = []\n    ;\n\n  for (var i = 0; i < tags.length; i++)\n    if (tags[i].type == 'text/syntaxhighlighter' || tags[i].type == 'syntaxhighlighter')\n      result.push(tags[i]);\n\n  return result;\n};\n\n/**\n * Checks if target DOM elements has specified CSS class.\n * @param {DOMElement} target Target DOM element to check.\n * @param {String} className Name of the CSS class to check for.\n * @return {Boolean} Returns true if class name is present, false otherwise.\n */\nfunction hasClass(target, className)\n{\n  return target.className.indexOf(className) != -1;\n}\n\n/**\n * Adds CSS class name to the target DOM element.\n * @param {DOMElement} target Target DOM element.\n * @param {String} className New CSS class to add.\n */\nfunction addClass(target, className)\n{\n  if (!hasClass(target, className))\n    target.className += ' ' + className;\n}\n\n/**\n * Removes CSS class name from the target DOM element.\n * @param {DOMElement} target Target DOM element.\n * @param {String} className CSS class to remove.\n */\nfunction removeClass(target, className)\n{\n  target.className = target.className.replace(className, '');\n}\n\n/**\n * Adds event handler to the target object.\n * @param {Object} obj    Target object.\n * @param {String} type   Name of the event.\n * @param {Function} func Handling function.\n */\nfunction attachEvent(obj, type, func, scope)\n{\n  function handler(e)\n  {\n    e = e || window.event;\n\n    if (!e.target)\n    {\n      e.target = e.srcElement;\n      e.preventDefault = function()\n      {\n        this.returnValue = false;\n      };\n    }\n\n    func.call(scope || window, e);\n  };\n\n  if (obj.attachEvent)\n  {\n    obj.attachEvent('on' + type, handler);\n  }\n  else\n  {\n    obj.addEventListener(type, handler, false);\n  }\n}\n\n/**\n * Looks for a child or parent node which has specified classname.\n * Equivalent to jQuery's $(container).find(\".className\")\n * @param {Element} target Target element.\n * @param {String} search Class name or node name to look for.\n * @param {Boolean} reverse If set to true, will go up the node tree instead of down.\n * @return {Element} Returns found child or parent element on null.\n */\nfunction findElement(target, search, reverse /* optional */)\n{\n  if (target == null)\n    return null;\n\n  var nodes     = reverse != true ? target.childNodes : [ target.parentNode ],\n    propertyToFind  = { '#' : 'id', '.' : 'className' }[search.substr(0, 1)] || 'nodeName',\n    expectedValue,\n    found\n    ;\n\n  expectedValue = propertyToFind != 'nodeName'\n    ? search.substr(1)\n    : search.toUpperCase()\n    ;\n\n  // main return of the found node\n  if ((target[propertyToFind] || '').indexOf(expectedValue) != -1)\n    return target;\n\n  for (var i = 0, l = nodes.length; nodes && i < l && found == null; i++)\n    found = findElement(nodes[i], search, reverse);\n\n  return found;\n}\n\n/**\n * Looks for a parent node which has specified classname.\n * This is an alias to <code>findElement(container, className, true)</code>.\n * @param {Element} target Target element.\n * @param {String} className Class name to look for.\n * @return {Element} Returns found parent element on null.\n */\nfunction findParentElement(target, className)\n{\n  return findElement(target, className, true);\n}\n\n/**\n * Opens up a centered popup window.\n * @param {String} url    URL to open in the window.\n * @param {String} name   Popup name.\n * @param {int} width   Popup width.\n * @param {int} height    Popup height.\n * @param {String} options  window.open() options.\n * @return {Window}     Returns window instance.\n */\nfunction popup(url, name, width, height, options)\n{\n  var x = (screen.width - width) / 2,\n    y = (screen.height - height) / 2\n    ;\n\n  options +=  ', left=' + x +\n        ', top=' + y +\n        ', width=' + width +\n        ', height=' + height\n    ;\n  options = options.replace(/^,/, '');\n\n  var win = window.open(url, name, options);\n  win.focus();\n  return win;\n}\n\nfunction getElementsByTagName(name)\n{\n  return document.getElementsByTagName(name);\n}\n\n/**\n * Finds all elements on the page which could be processes by SyntaxHighlighter.\n */\nfunction findElementsToHighlight(opts)\n{\n  var elements = getElementsByTagName(opts['tagName']),\n      scripts,\n      i\n      ;\n\n  // support for <SCRIPT TYPE=\"syntaxhighlighter\" /> feature\n  if(opts['useScriptTags'])\n  {\n    scripts = getElementsByTagName('script');\n\n    for (i = 0; i < scripts.length; i++)\n    {\n      if (scripts[i].type.match(/^(text\\/)?syntaxhighlighter$/))\n        elements.push(scripts[i]);\n    }\n  }\n\n  return elements;\n}\n\nfunction create(name)\n{\n  return document.createElement(name);\n}\n\n/**\n * Quick code mouse double click handler.\n */\nfunction quickCodeHandler(e)\n{\n  var target = e.target,\n    highlighterDiv = findParentElement(target, '.syntaxhighlighter'),\n    container = findParentElement(target, '.container'),\n    textarea = document.createElement('textarea'),\n    highlighter\n    ;\n\n  if (!container || !highlighterDiv || findElement(container, 'textarea'))\n    return;\n\n  //highlighter = highlighters.get(highlighterDiv.id);\n\n  // add source class name\n  addClass(highlighterDiv, 'source');\n\n  // Have to go over each line and grab it's text, can't just do it on the\n  // container because Firefox loses all \\n where as Webkit doesn't.\n  var lines = container.childNodes,\n    code = []\n    ;\n\n  for (var i = 0, l = lines.length; i < l; i++)\n    code.push(lines[i].innerText || lines[i].textContent);\n\n  // using \\r instead of \\r or \\r\\n makes this work equally well on IE, FF and Webkit\n  code = code.join('\\r');\n\n    // For Webkit browsers, replace nbsp with a breaking space\n    code = code.replace(/\\u00a0/g, \" \");\n\n  // inject <textarea/> tag\n  textarea.appendChild(document.createTextNode(code));\n  container.appendChild(textarea);\n\n  // preselect all text\n  textarea.focus();\n  textarea.select();\n\n  // set up handler for lost focus\n  attachEvent(textarea, 'blur', function(e)\n  {\n    textarea.parentNode.removeChild(textarea);\n    removeClass(highlighterDiv, 'source');\n  });\n};\n\nmodule.exports = {\n  quickCodeHandler: quickCodeHandler,\n  create: create,\n  popup: popup,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  attachEvent: attachEvent,\n  findElement: findElement,\n  findParentElement: findParentElement,\n  getSyntaxHighlighterScriptTags: getSyntaxHighlighterScriptTags,\n  findElementsToHighlight: findElementsToHighlight\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/dom.js\n **/","module.exports = {\n  space: '&nbsp;',\n\n  /** Enables use of <SCRIPT type=\"syntaxhighlighter\" /> tags. */\n  useScriptTags: true,\n\n  /** Blogger mode flag. */\n  bloggerMode: false,\n\n  stripBrs: false,\n\n  /** Name of the tag that SyntaxHighlighter will automatically look for. */\n  tagName: 'pre'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config.js\n **/","module.exports = {\n  /** Additional CSS class names to be added to highlighter elements. */\n  'class-name': '',\n\n  /** First line number. */\n  'first-line': 1,\n\n  /**\n   * Pads line numbers. Possible values are:\n   *\n   *   false - don't pad line numbers.\n   *   true  - automaticaly pad numbers with minimum required number of leading zeroes.\n   *   [int] - length up to which pad line numbers.\n   */\n  'pad-line-numbers': false,\n\n  /** Lines to highlight. */\n  'highlight': null,\n\n  /** Title to be displayed above the code block. */\n  'title': null,\n\n  /** Enables or disables smart tabs. */\n  'smart-tabs': true,\n\n  /** Gets or sets tab size. */\n  'tab-size': 4,\n\n  /** Enables or disables gutter. */\n  'gutter': true,\n\n  /** Enables quick code copy and paste from double click. */\n  'quick-code': true,\n\n  /** Forces code view to be collapsed. */\n  'collapse': false,\n\n  /** Enables or disables automatic links. */\n  'auto-links': true,\n\n  'unindent': true,\n\n  'html-script': false\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/defaults.js\n **/","var applyRegexList = require('syntaxhighlighter-match').applyRegexList;\n\nfunction HtmlScript(BrushXML, brushClass)\n{\n  var scriptBrush,\n    xmlBrush = new BrushXML()\n    ;\n\n  if (brushClass == null)\n    return;\n\n  scriptBrush = new brushClass();\n\n  if (scriptBrush.htmlScript == null)\n    throw new Error('Brush wasn\\'t configured for html-script option: ' + brushClass.brushName);\n\n  xmlBrush.regexList.push(\n    { regex: scriptBrush.htmlScript.code, func: process }\n  );\n\n  this.regexList = xmlBrush.regexList;\n\n  function offsetMatches(matches, offset)\n  {\n    for (var j = 0, l = matches.length; j < l; j++)\n      matches[j].index += offset;\n  }\n\n  function process(match, info)\n  {\n    var code = match.code,\n        results = [],\n        regexList = scriptBrush.regexList,\n        offset = match.index + match.left.length,\n        htmlScript = scriptBrush.htmlScript,\n        matches\n        ;\n\n    function add(matches)\n    {\n      results = results.concat(matches);\n    }\n\n    matches = applyRegexList(code, regexList);\n    offsetMatches(matches, offset);\n    add(matches);\n\n    // add left script bracket\n    if (htmlScript.left != null && match.left != null)\n    {\n      matches = applyRegexList(match.left, [htmlScript.left]);\n      offsetMatches(matches, match.index);\n      add(matches);\n    }\n\n    // add right script bracket\n    if (htmlScript.right != null && match.right != null)\n    {\n      matches = applyRegexList(match.right, [htmlScript.right]);\n      offsetMatches(matches, match.index + match[0].lastIndexOf(match.right));\n      add(matches);\n    }\n\n    for (var j = 0, l = results.length; j < l; j++)\n      results[j].brushName = brushClass.brushName;\n\n    return results;\n  }\n};\n\nmodule.exports = HtmlScript;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/html_script.js\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/process/browser.js\n **/","import Renderer from 'syntaxhighlighter-html-renderer';\nimport { XRegExp } from 'syntaxhighlighter-regex';\nimport { applyRegexList } from 'syntaxhighlighter-match';\n\nmodule.exports = class BrushBase {\n  /**\n   * Converts space separated list of keywords into a regular expression string.\n   * @param {String} str Space separated keywords.\n   * @return {String} Returns regular expression string.\n   */\n  getKeywords(str)\n  {\n    const results = str\n      .replace(/^\\s+|\\s+$/g, '')\n      .replace(/\\s+/g, '|')\n      ;\n\n    return `\\\\b(?:${results})\\\\b`;\n  }\n\n  /**\n   * Makes a brush compatible with the `html-script` functionality.\n   * @param {Object} regexGroup Object containing `left` and `right` regular expressions.\n   */\n  forHtmlScript(regexGroup)\n  {\n    const regex = { 'end': regexGroup.right.source };\n\n    if (regexGroup.eof) {\n      regex.end = `(?:(?:${regex.end})|$)`;\n    }\n\n    this.htmlScript = {\n      left: { regex: regexGroup.left, css: 'script' },\n      right: { regex: regexGroup.right, css: 'script' },\n      code: XRegExp(\n        \"(?<left>\" + regexGroup.left.source + \")\" +\n        \"(?<code>.*?)\" +\n        \"(?<right>\" + regex.end + \")\",\n        \"sgi\"\n        )\n    };\n  }\n\n  getHtml(code, params = {}) {\n    const matches = applyRegexList(code, this.regexList);\n    const renderer = new Renderer(code, matches, params);\n    return renderer.getHtml();\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./repos/brush-base/brush-base.js\n **/","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/domready/ready.js\n **/","export const string = value =>\n  value\n    .replace(/^([A-Z])/g, (_, character) => character.toLowerCase())\n    .replace(/([A-Z])/g, (_, character) => '-' + character.toLowerCase());\n\nexport const object = value => {\n  const result = {};\n  Object.keys(value).forEach(key => result[string(key)] = value[key]);\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dasherize.js\n **/"],"sourceRoot":""}